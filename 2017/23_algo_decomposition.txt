set b 79 // start init
set c b
jnz a 2 // a is always 1 for the second part), this skips line 4
jnz 1 5
mul b 100
sub b -100000
set c b
sub c -17000
// end init
// registers: a=1 b=107900 c=124900 d=0 e=0 f=0 g=0 h=0

set f 1 // start loop 3
set d 2

    set e 2 // start of second loop (sets d to 107900)

        set g d // start of first loop (sets f to 0 and e to 107900)
        mul g e
        sub g b
        jnz g 2
        set f 0 // when g (e*d) == b
        sub e -1 // increment e by 1
        set g e
        sub g b // when b == e => g = 0
        jnz g -8  // not executed when e == b = 107900
        // end of first loop
        // a=1 b=107900 c=124900 d=2 e=107900 f=0 g=0 h=0

    sub d -1 // increment d by 1
    set g d
    sub g b
    jnz g -13 // not executed when d == b == 107900
    // end of second loop
    // a=1 b=107900 c=124900 d=107900 e=107900 f=0 g=0 h=0

jnz f 2 // f set to 0 in the first loop, so this never runs
sub h -1 // increment h by 1
set g b // b = 107900
sub g c // c = 124900 (107900 + 17000)
jnz g 2
jnz 1 3 // this jump terminate the program when b == c == g == 124900
sub b -17 // increase b by 17
jnz 1 -23 // jump to line 9 which reset d, e, f but not b or c

79*100+100000